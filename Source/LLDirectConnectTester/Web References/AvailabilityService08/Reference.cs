//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace LLDirectConnectTester.AvailabilityService08 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RateAvailabilitySoap", Namespace="http://tempuri.org/")]
    public partial class RateAvailability : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private ServiceCredentials serviceCredentialsValueField;
        
        private System.Threading.SendOrPostCallback WebServiceLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertyAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertyBestPricingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitBestPricingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitAvailabilityCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback BlackoutUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeSuppliertUnitAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSuppliertUnitAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSupplierUnitAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanSupplierAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ARMUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistributionRateAvailabilityChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetICSTaskRateAvailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmSubmitRateAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistributionModifiedUnitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistributionTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitDailyBestDiscountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitAvailablePromotionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertyAvailablePromotionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshDiscountCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshRateAvailCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCacheAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelRateCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMajorChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpaqueChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackagingChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOpaqueParticipationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPackagingParticipationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDistroStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistroChannelInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistributionCommissionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RateAvailability() {
            this.Url = global::LLDirectConnectTester.Properties.Settings.Default.LLDirectConnectTester_AvailabilityService08_RateAvailability;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ServiceCredentials ServiceCredentialsValue {
            get {
                return this.serviceCredentialsValueField;
            }
            set {
                this.serviceCredentialsValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WebServiceLoginCompletedEventHandler WebServiceLoginCompleted;
        
        /// <remarks/>
        public event GetPropertyAvailabilityCompletedEventHandler GetPropertyAvailabilityCompleted;
        
        /// <remarks/>
        public event GetUnitInventoryCompletedEventHandler GetUnitInventoryCompleted;
        
        /// <remarks/>
        public event GetUnitAvailabilityCompletedEventHandler GetUnitAvailabilityCompleted;
        
        /// <remarks/>
        public event GetPropertyBestPricingCompletedEventHandler GetPropertyBestPricingCompleted;
        
        /// <remarks/>
        public event GetUnitBestPricingCompletedEventHandler GetUnitBestPricingCompleted;
        
        /// <remarks/>
        public event GetUnitAvailabilityCacheCompletedEventHandler GetUnitAvailabilityCacheCompleted;
        
        /// <remarks/>
        public event UpdateAvailabilityCompletedEventHandler UpdateAvailabilityCompleted;
        
        /// <remarks/>
        public event BlackoutUnitCompletedEventHandler BlackoutUnitCompleted;
        
        /// <remarks/>
        public event GeSuppliertUnitAvailabilityCompletedEventHandler GeSuppliertUnitAvailabilityCompleted;
        
        /// <remarks/>
        public event GetSuppliertUnitAvailabilityCompletedEventHandler GetSuppliertUnitAvailabilityCompleted;
        
        /// <remarks/>
        public event UpdateSupplierUnitAvailabilityCompletedEventHandler UpdateSupplierUnitAvailabilityCompleted;
        
        /// <remarks/>
        public event CleanSupplierAvailabilityCompletedEventHandler CleanSupplierAvailabilityCompleted;
        
        /// <remarks/>
        public event UploadCompletedEventHandler UploadCompleted;
        
        /// <remarks/>
        public event ARMUploadCompletedEventHandler ARMUploadCompleted;
        
        /// <remarks/>
        public event GetDistributionRateAvailabilityChangesCompletedEventHandler GetDistributionRateAvailabilityChangesCompleted;
        
        /// <remarks/>
        public event GetICSTaskRateAvailCompletedEventHandler GetICSTaskRateAvailCompleted;
        
        /// <remarks/>
        public event ConfirmSubmitRateAvailabilityCompletedEventHandler ConfirmSubmitRateAvailabilityCompleted;
        
        /// <remarks/>
        public event GetDistributionModifiedUnitsCompletedEventHandler GetDistributionModifiedUnitsCompleted;
        
        /// <remarks/>
        public event GetDistributionTaskCompletedEventHandler GetDistributionTaskCompleted;
        
        /// <remarks/>
        public event GetUnitDailyBestDiscountsCompletedEventHandler GetUnitDailyBestDiscountsCompleted;
        
        /// <remarks/>
        public event GetUnitAvailablePromotionsCompletedEventHandler GetUnitAvailablePromotionsCompleted;
        
        /// <remarks/>
        public event GetPropertyAvailablePromotionsCompletedEventHandler GetPropertyAvailablePromotionsCompleted;
        
        /// <remarks/>
        public event RefreshDiscountCacheCompletedEventHandler RefreshDiscountCacheCompleted;
        
        /// <remarks/>
        public event RefreshRateAvailCacheCompletedEventHandler RefreshRateAvailCacheCompleted;
        
        /// <remarks/>
        public event RefreshCacheCompletedEventHandler RefreshCacheCompleted;
        
        /// <remarks/>
        public event UpdateCacheAvailabilityCompletedEventHandler UpdateCacheAvailabilityCompleted;
        
        /// <remarks/>
        public event GetChannelRateCodesCompletedEventHandler GetChannelRateCodesCompleted;
        
        /// <remarks/>
        public event GetMajorChannelsCompletedEventHandler GetMajorChannelsCompleted;
        
        /// <remarks/>
        public event GetOpaqueChannelsCompletedEventHandler GetOpaqueChannelsCompleted;
        
        /// <remarks/>
        public event GetPackagingChannelsCompletedEventHandler GetPackagingChannelsCompleted;
        
        /// <remarks/>
        public event CheckOpaqueParticipationCompletedEventHandler CheckOpaqueParticipationCompleted;
        
        /// <remarks/>
        public event CheckPackagingParticipationCompletedEventHandler CheckPackagingParticipationCompleted;
        
        /// <remarks/>
        public event CheckDistroStatusCompletedEventHandler CheckDistroStatusCompleted;
        
        /// <remarks/>
        public event GetDistroChannelInfoCompletedEventHandler GetDistroChannelInfoCompleted;
        
        /// <remarks/>
        public event GetInventoryStatusCompletedEventHandler GetInventoryStatusCompleted;
        
        /// <remarks/>
        public event GetDistributionCommissionCompletedEventHandler GetDistributionCommissionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebServiceLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WebServiceLogin(string appname, string clientname, string password, string machinename) {
            object[] results = this.Invoke("WebServiceLogin", new object[] {
                        appname,
                        clientname,
                        password,
                        machinename});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WebServiceLoginAsync(string appname, string clientname, string password, string machinename) {
            this.WebServiceLoginAsync(appname, clientname, password, machinename, null);
        }
        
        /// <remarks/>
        public void WebServiceLoginAsync(string appname, string clientname, string password, string machinename, object userState) {
            if ((this.WebServiceLoginOperationCompleted == null)) {
                this.WebServiceLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebServiceLoginOperationCompleted);
            }
            this.InvokeAsync("WebServiceLogin", new object[] {
                        appname,
                        clientname,
                        password,
                        machinename}, this.WebServiceLoginOperationCompleted, userState);
        }
        
        private void OnWebServiceLoginOperationCompleted(object arg) {
            if ((this.WebServiceLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebServiceLoginCompleted(this, new WebServiceLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPropertyAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropertyAvail GetPropertyAvailability(int communityid, System.DateTime startdate, System.DateTime enddate) {
            object[] results = this.Invoke("GetPropertyAvailability", new object[] {
                        communityid,
                        startdate,
                        enddate});
            return ((PropertyAvail)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertyAvailabilityAsync(int communityid, System.DateTime startdate, System.DateTime enddate) {
            this.GetPropertyAvailabilityAsync(communityid, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void GetPropertyAvailabilityAsync(int communityid, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.GetPropertyAvailabilityOperationCompleted == null)) {
                this.GetPropertyAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertyAvailabilityOperationCompleted);
            }
            this.InvokeAsync("GetPropertyAvailability", new object[] {
                        communityid,
                        startdate,
                        enddate}, this.GetPropertyAvailabilityOperationCompleted, userState);
        }
        
        private void OnGetPropertyAvailabilityOperationCompleted(object arg) {
            if ((this.GetPropertyAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertyAvailabilityCompleted(this, new GetPropertyAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitInventory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitInventory GetUnitInventory(int unitprofileid, System.DateTime startdate, System.DateTime enddate) {
            object[] results = this.Invoke("GetUnitInventory", new object[] {
                        unitprofileid,
                        startdate,
                        enddate});
            return ((UnitInventory)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitInventoryAsync(int unitprofileid, System.DateTime startdate, System.DateTime enddate) {
            this.GetUnitInventoryAsync(unitprofileid, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void GetUnitInventoryAsync(int unitprofileid, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.GetUnitInventoryOperationCompleted == null)) {
                this.GetUnitInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitInventoryOperationCompleted);
            }
            this.InvokeAsync("GetUnitInventory", new object[] {
                        unitprofileid,
                        startdate,
                        enddate}, this.GetUnitInventoryOperationCompleted, userState);
        }
        
        private void OnGetUnitInventoryOperationCompleted(object arg) {
            if ((this.GetUnitInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitInventoryCompleted(this, new GetUnitInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitAvail GetUnitAvailability(int unitprofileid, System.DateTime startdate, System.DateTime enddate) {
            object[] results = this.Invoke("GetUnitAvailability", new object[] {
                        unitprofileid,
                        startdate,
                        enddate});
            return ((UnitAvail)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitAvailabilityAsync(int unitprofileid, System.DateTime startdate, System.DateTime enddate) {
            this.GetUnitAvailabilityAsync(unitprofileid, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void GetUnitAvailabilityAsync(int unitprofileid, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.GetUnitAvailabilityOperationCompleted == null)) {
                this.GetUnitAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitAvailabilityOperationCompleted);
            }
            this.InvokeAsync("GetUnitAvailability", new object[] {
                        unitprofileid,
                        startdate,
                        enddate}, this.GetUnitAvailabilityOperationCompleted, userState);
        }
        
        private void OnGetUnitAvailabilityOperationCompleted(object arg) {
            if ((this.GetUnitAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitAvailabilityCompleted(this, new GetUnitAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPropertyBestPricing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropertyPricing GetPropertyBestPricing(int ChannelID, string ARCNumber, string RateCodes, int Communityid, int MinStay, System.DateTime Startdate, System.DateTime Enddate) {
            object[] results = this.Invoke("GetPropertyBestPricing", new object[] {
                        ChannelID,
                        ARCNumber,
                        RateCodes,
                        Communityid,
                        MinStay,
                        Startdate,
                        Enddate});
            return ((PropertyPricing)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertyBestPricingAsync(int ChannelID, string ARCNumber, string RateCodes, int Communityid, int MinStay, System.DateTime Startdate, System.DateTime Enddate) {
            this.GetPropertyBestPricingAsync(ChannelID, ARCNumber, RateCodes, Communityid, MinStay, Startdate, Enddate, null);
        }
        
        /// <remarks/>
        public void GetPropertyBestPricingAsync(int ChannelID, string ARCNumber, string RateCodes, int Communityid, int MinStay, System.DateTime Startdate, System.DateTime Enddate, object userState) {
            if ((this.GetPropertyBestPricingOperationCompleted == null)) {
                this.GetPropertyBestPricingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertyBestPricingOperationCompleted);
            }
            this.InvokeAsync("GetPropertyBestPricing", new object[] {
                        ChannelID,
                        ARCNumber,
                        RateCodes,
                        Communityid,
                        MinStay,
                        Startdate,
                        Enddate}, this.GetPropertyBestPricingOperationCompleted, userState);
        }
        
        private void OnGetPropertyBestPricingOperationCompleted(object arg) {
            if ((this.GetPropertyBestPricingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertyBestPricingCompleted(this, new GetPropertyBestPricingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitBestPricing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitPricing GetUnitBestPricing(int ChannelID, string ARCNumber, string RateCodes, int Unitprofileid, int MinStay, System.DateTime Startdate, System.DateTime Enddate) {
            object[] results = this.Invoke("GetUnitBestPricing", new object[] {
                        ChannelID,
                        ARCNumber,
                        RateCodes,
                        Unitprofileid,
                        MinStay,
                        Startdate,
                        Enddate});
            return ((UnitPricing)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitBestPricingAsync(int ChannelID, string ARCNumber, string RateCodes, int Unitprofileid, int MinStay, System.DateTime Startdate, System.DateTime Enddate) {
            this.GetUnitBestPricingAsync(ChannelID, ARCNumber, RateCodes, Unitprofileid, MinStay, Startdate, Enddate, null);
        }
        
        /// <remarks/>
        public void GetUnitBestPricingAsync(int ChannelID, string ARCNumber, string RateCodes, int Unitprofileid, int MinStay, System.DateTime Startdate, System.DateTime Enddate, object userState) {
            if ((this.GetUnitBestPricingOperationCompleted == null)) {
                this.GetUnitBestPricingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitBestPricingOperationCompleted);
            }
            this.InvokeAsync("GetUnitBestPricing", new object[] {
                        ChannelID,
                        ARCNumber,
                        RateCodes,
                        Unitprofileid,
                        MinStay,
                        Startdate,
                        Enddate}, this.GetUnitBestPricingOperationCompleted, userState);
        }
        
        private void OnGetUnitBestPricingOperationCompleted(object arg) {
            if ((this.GetUnitBestPricingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitBestPricingCompleted(this, new GetUnitBestPricingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitAvailabilityCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitAvail GetUnitAvailabilityCache(int unitprofileid, System.DateTime startdate, System.DateTime enddate) {
            object[] results = this.Invoke("GetUnitAvailabilityCache", new object[] {
                        unitprofileid,
                        startdate,
                        enddate});
            return ((UnitAvail)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitAvailabilityCacheAsync(int unitprofileid, System.DateTime startdate, System.DateTime enddate) {
            this.GetUnitAvailabilityCacheAsync(unitprofileid, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void GetUnitAvailabilityCacheAsync(int unitprofileid, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.GetUnitAvailabilityCacheOperationCompleted == null)) {
                this.GetUnitAvailabilityCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitAvailabilityCacheOperationCompleted);
            }
            this.InvokeAsync("GetUnitAvailabilityCache", new object[] {
                        unitprofileid,
                        startdate,
                        enddate}, this.GetUnitAvailabilityCacheOperationCompleted, userState);
        }
        
        private void OnGetUnitAvailabilityCacheOperationCompleted(object arg) {
            if ((this.GetUnitAvailabilityCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitAvailabilityCacheCompleted(this, new GetUnitAvailabilityCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAvailability(string handler, Availability[] Availabilities, string Updateby) {
            object[] results = this.Invoke("UpdateAvailability", new object[] {
                        handler,
                        Availabilities,
                        Updateby});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAvailabilityAsync(string handler, Availability[] Availabilities, string Updateby) {
            this.UpdateAvailabilityAsync(handler, Availabilities, Updateby, null);
        }
        
        /// <remarks/>
        public void UpdateAvailabilityAsync(string handler, Availability[] Availabilities, string Updateby, object userState) {
            if ((this.UpdateAvailabilityOperationCompleted == null)) {
                this.UpdateAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAvailabilityOperationCompleted);
            }
            this.InvokeAsync("UpdateAvailability", new object[] {
                        handler,
                        Availabilities,
                        Updateby}, this.UpdateAvailabilityOperationCompleted, userState);
        }
        
        private void OnUpdateAvailabilityOperationCompleted(object arg) {
            if ((this.UpdateAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAvailabilityCompleted(this, new UpdateAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BlackoutUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BlackoutUnit(string handler, int unitprofileid, System.DateTime startdate, System.DateTime enddate, string Updateby) {
            object[] results = this.Invoke("BlackoutUnit", new object[] {
                        handler,
                        unitprofileid,
                        startdate,
                        enddate,
                        Updateby});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BlackoutUnitAsync(string handler, int unitprofileid, System.DateTime startdate, System.DateTime enddate, string Updateby) {
            this.BlackoutUnitAsync(handler, unitprofileid, startdate, enddate, Updateby, null);
        }
        
        /// <remarks/>
        public void BlackoutUnitAsync(string handler, int unitprofileid, System.DateTime startdate, System.DateTime enddate, string Updateby, object userState) {
            if ((this.BlackoutUnitOperationCompleted == null)) {
                this.BlackoutUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBlackoutUnitOperationCompleted);
            }
            this.InvokeAsync("BlackoutUnit", new object[] {
                        handler,
                        unitprofileid,
                        startdate,
                        enddate,
                        Updateby}, this.BlackoutUnitOperationCompleted, userState);
        }
        
        private void OnBlackoutUnitOperationCompleted(object arg) {
            if ((this.BlackoutUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BlackoutUnitCompleted(this, new BlackoutUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GeSuppliertUnitAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SupplierUnitAvail GeSuppliertUnitAvailability(int UnitMapId, System.DateTime startdate, System.DateTime enddate) {
            object[] results = this.Invoke("GeSuppliertUnitAvailability", new object[] {
                        UnitMapId,
                        startdate,
                        enddate});
            return ((SupplierUnitAvail)(results[0]));
        }
        
        /// <remarks/>
        public void GeSuppliertUnitAvailabilityAsync(int UnitMapId, System.DateTime startdate, System.DateTime enddate) {
            this.GeSuppliertUnitAvailabilityAsync(UnitMapId, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void GeSuppliertUnitAvailabilityAsync(int UnitMapId, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.GeSuppliertUnitAvailabilityOperationCompleted == null)) {
                this.GeSuppliertUnitAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeSuppliertUnitAvailabilityOperationCompleted);
            }
            this.InvokeAsync("GeSuppliertUnitAvailability", new object[] {
                        UnitMapId,
                        startdate,
                        enddate}, this.GeSuppliertUnitAvailabilityOperationCompleted, userState);
        }
        
        private void OnGeSuppliertUnitAvailabilityOperationCompleted(object arg) {
            if ((this.GeSuppliertUnitAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeSuppliertUnitAvailabilityCompleted(this, new GeSuppliertUnitAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSuppliertUnitAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SupplierUnitAvail GetSuppliertUnitAvailability(int UnitMapId, System.DateTime startdate, System.DateTime enddate) {
            object[] results = this.Invoke("GetSuppliertUnitAvailability", new object[] {
                        UnitMapId,
                        startdate,
                        enddate});
            return ((SupplierUnitAvail)(results[0]));
        }
        
        /// <remarks/>
        public void GetSuppliertUnitAvailabilityAsync(int UnitMapId, System.DateTime startdate, System.DateTime enddate) {
            this.GetSuppliertUnitAvailabilityAsync(UnitMapId, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void GetSuppliertUnitAvailabilityAsync(int UnitMapId, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.GetSuppliertUnitAvailabilityOperationCompleted == null)) {
                this.GetSuppliertUnitAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSuppliertUnitAvailabilityOperationCompleted);
            }
            this.InvokeAsync("GetSuppliertUnitAvailability", new object[] {
                        UnitMapId,
                        startdate,
                        enddate}, this.GetSuppliertUnitAvailabilityOperationCompleted, userState);
        }
        
        private void OnGetSuppliertUnitAvailabilityOperationCompleted(object arg) {
            if ((this.GetSuppliertUnitAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSuppliertUnitAvailabilityCompleted(this, new GetSuppliertUnitAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSupplierUnitAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSupplierUnitAvailability(string handler, SupplierRateAvailability[] Availabilities, string Updateby) {
            object[] results = this.Invoke("UpdateSupplierUnitAvailability", new object[] {
                        handler,
                        Availabilities,
                        Updateby});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSupplierUnitAvailabilityAsync(string handler, SupplierRateAvailability[] Availabilities, string Updateby) {
            this.UpdateSupplierUnitAvailabilityAsync(handler, Availabilities, Updateby, null);
        }
        
        /// <remarks/>
        public void UpdateSupplierUnitAvailabilityAsync(string handler, SupplierRateAvailability[] Availabilities, string Updateby, object userState) {
            if ((this.UpdateSupplierUnitAvailabilityOperationCompleted == null)) {
                this.UpdateSupplierUnitAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSupplierUnitAvailabilityOperationCompleted);
            }
            this.InvokeAsync("UpdateSupplierUnitAvailability", new object[] {
                        handler,
                        Availabilities,
                        Updateby}, this.UpdateSupplierUnitAvailabilityOperationCompleted, userState);
        }
        
        private void OnUpdateSupplierUnitAvailabilityOperationCompleted(object arg) {
            if ((this.UpdateSupplierUnitAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSupplierUnitAvailabilityCompleted(this, new UpdateSupplierUnitAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CleanSupplierAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CleanSupplierAvailability(string handler, int UnitMapID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> EndDate, string UpdatedBy) {
            object[] results = this.Invoke("CleanSupplierAvailability", new object[] {
                        handler,
                        UnitMapID,
                        StartDate,
                        EndDate,
                        UpdatedBy});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CleanSupplierAvailabilityAsync(string handler, int UnitMapID, System.Nullable<System.DateTime> StartDate, System.Nullable<System.DateTime> EndDate, string UpdatedBy) {
            this.CleanSupplierAvailabilityAsync(handler, UnitMapID, StartDate, EndDate, UpdatedBy, null);
        }
        
        /// <remarks/>
        public void CleanSupplierAvailabilityAsync(string handler, int UnitMapID, System.Nullable<System.DateTime> StartDate, System.Nullable<System.DateTime> EndDate, string UpdatedBy, object userState) {
            if ((this.CleanSupplierAvailabilityOperationCompleted == null)) {
                this.CleanSupplierAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanSupplierAvailabilityOperationCompleted);
            }
            this.InvokeAsync("CleanSupplierAvailability", new object[] {
                        handler,
                        UnitMapID,
                        StartDate,
                        EndDate,
                        UpdatedBy}, this.CleanSupplierAvailabilityOperationCompleted, userState);
        }
        
        private void OnCleanSupplierAvailabilityOperationCompleted(object arg) {
            if ((this.CleanSupplierAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanSupplierAvailabilityCompleted(this, new CleanSupplierAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Upload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Upload(string XMLText, string UserID) {
            object[] results = this.Invoke("Upload", new object[] {
                        XMLText,
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAsync(string XMLText, string UserID) {
            this.UploadAsync(XMLText, UserID, null);
        }
        
        /// <remarks/>
        public void UploadAsync(string XMLText, string UserID, object userState) {
            if ((this.UploadOperationCompleted == null)) {
                this.UploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadOperationCompleted);
            }
            this.InvokeAsync("Upload", new object[] {
                        XMLText,
                        UserID}, this.UploadOperationCompleted, userState);
        }
        
        private void OnUploadOperationCompleted(object arg) {
            if ((this.UploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadCompleted(this, new UploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ARMUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ARMUpload(string XMLText, string UserID) {
            object[] results = this.Invoke("ARMUpload", new object[] {
                        XMLText,
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ARMUploadAsync(string XMLText, string UserID) {
            this.ARMUploadAsync(XMLText, UserID, null);
        }
        
        /// <remarks/>
        public void ARMUploadAsync(string XMLText, string UserID, object userState) {
            if ((this.ARMUploadOperationCompleted == null)) {
                this.ARMUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnARMUploadOperationCompleted);
            }
            this.InvokeAsync("ARMUpload", new object[] {
                        XMLText,
                        UserID}, this.ARMUploadOperationCompleted, userState);
        }
        
        private void OnARMUploadOperationCompleted(object arg) {
            if ((this.ARMUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ARMUploadCompleted(this, new ARMUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistributionRateAvailabilityChanges", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DistributionProperty[] GetDistributionRateAvailabilityChanges(int ChannelID, int DateRange, System.DateTime LastUpdate, string CommunityIdList, string ArcNumber, string RateCodes) {
            object[] results = this.Invoke("GetDistributionRateAvailabilityChanges", new object[] {
                        ChannelID,
                        DateRange,
                        LastUpdate,
                        CommunityIdList,
                        ArcNumber,
                        RateCodes});
            return ((DistributionProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDistributionRateAvailabilityChangesAsync(int ChannelID, int DateRange, System.DateTime LastUpdate, string CommunityIdList, string ArcNumber, string RateCodes) {
            this.GetDistributionRateAvailabilityChangesAsync(ChannelID, DateRange, LastUpdate, CommunityIdList, ArcNumber, RateCodes, null);
        }
        
        /// <remarks/>
        public void GetDistributionRateAvailabilityChangesAsync(int ChannelID, int DateRange, System.DateTime LastUpdate, string CommunityIdList, string ArcNumber, string RateCodes, object userState) {
            if ((this.GetDistributionRateAvailabilityChangesOperationCompleted == null)) {
                this.GetDistributionRateAvailabilityChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistributionRateAvailabilityChangesOperationCompleted);
            }
            this.InvokeAsync("GetDistributionRateAvailabilityChanges", new object[] {
                        ChannelID,
                        DateRange,
                        LastUpdate,
                        CommunityIdList,
                        ArcNumber,
                        RateCodes}, this.GetDistributionRateAvailabilityChangesOperationCompleted, userState);
        }
        
        private void OnGetDistributionRateAvailabilityChangesOperationCompleted(object arg) {
            if ((this.GetDistributionRateAvailabilityChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistributionRateAvailabilityChangesCompleted(this, new GetDistributionRateAvailabilityChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetICSTaskRateAvail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DistributionProperty[] GetICSTaskRateAvail(int ChannelID, int RegistrationID, string ArcNumber, string RateCodes, bool FullUpdate) {
            object[] results = this.Invoke("GetICSTaskRateAvail", new object[] {
                        ChannelID,
                        RegistrationID,
                        ArcNumber,
                        RateCodes,
                        FullUpdate});
            return ((DistributionProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void GetICSTaskRateAvailAsync(int ChannelID, int RegistrationID, string ArcNumber, string RateCodes, bool FullUpdate) {
            this.GetICSTaskRateAvailAsync(ChannelID, RegistrationID, ArcNumber, RateCodes, FullUpdate, null);
        }
        
        /// <remarks/>
        public void GetICSTaskRateAvailAsync(int ChannelID, int RegistrationID, string ArcNumber, string RateCodes, bool FullUpdate, object userState) {
            if ((this.GetICSTaskRateAvailOperationCompleted == null)) {
                this.GetICSTaskRateAvailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetICSTaskRateAvailOperationCompleted);
            }
            this.InvokeAsync("GetICSTaskRateAvail", new object[] {
                        ChannelID,
                        RegistrationID,
                        ArcNumber,
                        RateCodes,
                        FullUpdate}, this.GetICSTaskRateAvailOperationCompleted, userState);
        }
        
        private void OnGetICSTaskRateAvailOperationCompleted(object arg) {
            if ((this.GetICSTaskRateAvailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetICSTaskRateAvailCompleted(this, new GetICSTaskRateAvailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmSubmitRateAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConfirmSubmitRateAvailability(int ChannelID, int UnitProfile, System.DateTime QueryTime) {
            object[] results = this.Invoke("ConfirmSubmitRateAvailability", new object[] {
                        ChannelID,
                        UnitProfile,
                        QueryTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmSubmitRateAvailabilityAsync(int ChannelID, int UnitProfile, System.DateTime QueryTime) {
            this.ConfirmSubmitRateAvailabilityAsync(ChannelID, UnitProfile, QueryTime, null);
        }
        
        /// <remarks/>
        public void ConfirmSubmitRateAvailabilityAsync(int ChannelID, int UnitProfile, System.DateTime QueryTime, object userState) {
            if ((this.ConfirmSubmitRateAvailabilityOperationCompleted == null)) {
                this.ConfirmSubmitRateAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmSubmitRateAvailabilityOperationCompleted);
            }
            this.InvokeAsync("ConfirmSubmitRateAvailability", new object[] {
                        ChannelID,
                        UnitProfile,
                        QueryTime}, this.ConfirmSubmitRateAvailabilityOperationCompleted, userState);
        }
        
        private void OnConfirmSubmitRateAvailabilityOperationCompleted(object arg) {
            if ((this.ConfirmSubmitRateAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmSubmitRateAvailabilityCompleted(this, new ConfirmSubmitRateAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistributionModifiedUnits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DistributionProperty GetDistributionModifiedUnits(int CommunityId, System.DateTime QueryTime, int ChannelID, string ArcNumber, string RateCodes, int MinStay, int DiscountRule, int MaxLengthofStay, int MaxDOA, bool BestAvailable) {
            object[] results = this.Invoke("GetDistributionModifiedUnits", new object[] {
                        CommunityId,
                        QueryTime,
                        ChannelID,
                        ArcNumber,
                        RateCodes,
                        MinStay,
                        DiscountRule,
                        MaxLengthofStay,
                        MaxDOA,
                        BestAvailable});
            return ((DistributionProperty)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistributionModifiedUnitsAsync(int CommunityId, System.DateTime QueryTime, int ChannelID, string ArcNumber, string RateCodes, int MinStay, int DiscountRule, int MaxLengthofStay, int MaxDOA, bool BestAvailable) {
            this.GetDistributionModifiedUnitsAsync(CommunityId, QueryTime, ChannelID, ArcNumber, RateCodes, MinStay, DiscountRule, MaxLengthofStay, MaxDOA, BestAvailable, null);
        }
        
        /// <remarks/>
        public void GetDistributionModifiedUnitsAsync(int CommunityId, System.DateTime QueryTime, int ChannelID, string ArcNumber, string RateCodes, int MinStay, int DiscountRule, int MaxLengthofStay, int MaxDOA, bool BestAvailable, object userState) {
            if ((this.GetDistributionModifiedUnitsOperationCompleted == null)) {
                this.GetDistributionModifiedUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistributionModifiedUnitsOperationCompleted);
            }
            this.InvokeAsync("GetDistributionModifiedUnits", new object[] {
                        CommunityId,
                        QueryTime,
                        ChannelID,
                        ArcNumber,
                        RateCodes,
                        MinStay,
                        DiscountRule,
                        MaxLengthofStay,
                        MaxDOA,
                        BestAvailable}, this.GetDistributionModifiedUnitsOperationCompleted, userState);
        }
        
        private void OnGetDistributionModifiedUnitsOperationCompleted(object arg) {
            if ((this.GetDistributionModifiedUnitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistributionModifiedUnitsCompleted(this, new GetDistributionModifiedUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistributionTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DistributionProperty GetDistributionTask(RRAChangedRequest request) {
            object[] results = this.Invoke("GetDistributionTask", new object[] {
                        request});
            return ((DistributionProperty)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistributionTaskAsync(RRAChangedRequest request) {
            this.GetDistributionTaskAsync(request, null);
        }
        
        /// <remarks/>
        public void GetDistributionTaskAsync(RRAChangedRequest request, object userState) {
            if ((this.GetDistributionTaskOperationCompleted == null)) {
                this.GetDistributionTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistributionTaskOperationCompleted);
            }
            this.InvokeAsync("GetDistributionTask", new object[] {
                        request}, this.GetDistributionTaskOperationCompleted, userState);
        }
        
        private void OnGetDistributionTaskOperationCompleted(object arg) {
            if ((this.GetDistributionTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistributionTaskCompleted(this, new GetDistributionTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitDailyBestDiscounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DailyDiscount[] GetUnitDailyBestDiscounts(int unitprofileid, int MinStay, System.DateTime startdate, System.DateTime enddate) {
            object[] results = this.Invoke("GetUnitDailyBestDiscounts", new object[] {
                        unitprofileid,
                        MinStay,
                        startdate,
                        enddate});
            return ((DailyDiscount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitDailyBestDiscountsAsync(int unitprofileid, int MinStay, System.DateTime startdate, System.DateTime enddate) {
            this.GetUnitDailyBestDiscountsAsync(unitprofileid, MinStay, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void GetUnitDailyBestDiscountsAsync(int unitprofileid, int MinStay, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.GetUnitDailyBestDiscountsOperationCompleted == null)) {
                this.GetUnitDailyBestDiscountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitDailyBestDiscountsOperationCompleted);
            }
            this.InvokeAsync("GetUnitDailyBestDiscounts", new object[] {
                        unitprofileid,
                        MinStay,
                        startdate,
                        enddate}, this.GetUnitDailyBestDiscountsOperationCompleted, userState);
        }
        
        private void OnGetUnitDailyBestDiscountsOperationCompleted(object arg) {
            if ((this.GetUnitDailyBestDiscountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitDailyBestDiscountsCompleted(this, new GetUnitDailyBestDiscountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitAvailablePromotions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DiscountCache[] GetUnitAvailablePromotions(int unitprofileid, System.DateTime startdate, System.DateTime enddate) {
            object[] results = this.Invoke("GetUnitAvailablePromotions", new object[] {
                        unitprofileid,
                        startdate,
                        enddate});
            return ((DiscountCache[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitAvailablePromotionsAsync(int unitprofileid, System.DateTime startdate, System.DateTime enddate) {
            this.GetUnitAvailablePromotionsAsync(unitprofileid, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void GetUnitAvailablePromotionsAsync(int unitprofileid, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.GetUnitAvailablePromotionsOperationCompleted == null)) {
                this.GetUnitAvailablePromotionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitAvailablePromotionsOperationCompleted);
            }
            this.InvokeAsync("GetUnitAvailablePromotions", new object[] {
                        unitprofileid,
                        startdate,
                        enddate}, this.GetUnitAvailablePromotionsOperationCompleted, userState);
        }
        
        private void OnGetUnitAvailablePromotionsOperationCompleted(object arg) {
            if ((this.GetUnitAvailablePromotionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitAvailablePromotionsCompleted(this, new GetUnitAvailablePromotionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPropertyAvailablePromotions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DiscountCache[] GetPropertyAvailablePromotions(int CommunityId, System.DateTime startdate, System.DateTime enddate) {
            object[] results = this.Invoke("GetPropertyAvailablePromotions", new object[] {
                        CommunityId,
                        startdate,
                        enddate});
            return ((DiscountCache[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertyAvailablePromotionsAsync(int CommunityId, System.DateTime startdate, System.DateTime enddate) {
            this.GetPropertyAvailablePromotionsAsync(CommunityId, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void GetPropertyAvailablePromotionsAsync(int CommunityId, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.GetPropertyAvailablePromotionsOperationCompleted == null)) {
                this.GetPropertyAvailablePromotionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertyAvailablePromotionsOperationCompleted);
            }
            this.InvokeAsync("GetPropertyAvailablePromotions", new object[] {
                        CommunityId,
                        startdate,
                        enddate}, this.GetPropertyAvailablePromotionsOperationCompleted, userState);
        }
        
        private void OnGetPropertyAvailablePromotionsOperationCompleted(object arg) {
            if ((this.GetPropertyAvailablePromotionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertyAvailablePromotionsCompleted(this, new GetPropertyAvailablePromotionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefreshDiscountCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RefreshDiscountCache() {
            object[] results = this.Invoke("RefreshDiscountCache", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefreshDiscountCacheAsync() {
            this.RefreshDiscountCacheAsync(null);
        }
        
        /// <remarks/>
        public void RefreshDiscountCacheAsync(object userState) {
            if ((this.RefreshDiscountCacheOperationCompleted == null)) {
                this.RefreshDiscountCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshDiscountCacheOperationCompleted);
            }
            this.InvokeAsync("RefreshDiscountCache", new object[0], this.RefreshDiscountCacheOperationCompleted, userState);
        }
        
        private void OnRefreshDiscountCacheOperationCompleted(object arg) {
            if ((this.RefreshDiscountCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshDiscountCacheCompleted(this, new RefreshDiscountCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefreshRateAvailCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RefreshRateAvailCache() {
            object[] results = this.Invoke("RefreshRateAvailCache", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefreshRateAvailCacheAsync() {
            this.RefreshRateAvailCacheAsync(null);
        }
        
        /// <remarks/>
        public void RefreshRateAvailCacheAsync(object userState) {
            if ((this.RefreshRateAvailCacheOperationCompleted == null)) {
                this.RefreshRateAvailCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshRateAvailCacheOperationCompleted);
            }
            this.InvokeAsync("RefreshRateAvailCache", new object[0], this.RefreshRateAvailCacheOperationCompleted, userState);
        }
        
        private void OnRefreshRateAvailCacheOperationCompleted(object arg) {
            if ((this.RefreshRateAvailCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshRateAvailCacheCompleted(this, new RefreshRateAvailCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefreshCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RefreshCache() {
            object[] results = this.Invoke("RefreshCache", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefreshCacheAsync() {
            this.RefreshCacheAsync(null);
        }
        
        /// <remarks/>
        public void RefreshCacheAsync(object userState) {
            if ((this.RefreshCacheOperationCompleted == null)) {
                this.RefreshCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshCacheOperationCompleted);
            }
            this.InvokeAsync("RefreshCache", new object[0], this.RefreshCacheOperationCompleted, userState);
        }
        
        private void OnRefreshCacheOperationCompleted(object arg) {
            if ((this.RefreshCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshCacheCompleted(this, new RefreshCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCacheAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCacheAvailability(string handler, int unitProfileID, System.DateTime DateAvail, int NumAvail) {
            this.Invoke("UpdateCacheAvailability", new object[] {
                        handler,
                        unitProfileID,
                        DateAvail,
                        NumAvail});
        }
        
        /// <remarks/>
        public void UpdateCacheAvailabilityAsync(string handler, int unitProfileID, System.DateTime DateAvail, int NumAvail) {
            this.UpdateCacheAvailabilityAsync(handler, unitProfileID, DateAvail, NumAvail, null);
        }
        
        /// <remarks/>
        public void UpdateCacheAvailabilityAsync(string handler, int unitProfileID, System.DateTime DateAvail, int NumAvail, object userState) {
            if ((this.UpdateCacheAvailabilityOperationCompleted == null)) {
                this.UpdateCacheAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCacheAvailabilityOperationCompleted);
            }
            this.InvokeAsync("UpdateCacheAvailability", new object[] {
                        handler,
                        unitProfileID,
                        DateAvail,
                        NumAvail}, this.UpdateCacheAvailabilityOperationCompleted, userState);
        }
        
        private void OnUpdateCacheAvailabilityOperationCompleted(object arg) {
            if ((this.UpdateCacheAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCacheAvailabilityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChannelRateCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetChannelRateCodes(int ChannelID) {
            object[] results = this.Invoke("GetChannelRateCodes", new object[] {
                        ChannelID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelRateCodesAsync(int ChannelID) {
            this.GetChannelRateCodesAsync(ChannelID, null);
        }
        
        /// <remarks/>
        public void GetChannelRateCodesAsync(int ChannelID, object userState) {
            if ((this.GetChannelRateCodesOperationCompleted == null)) {
                this.GetChannelRateCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelRateCodesOperationCompleted);
            }
            this.InvokeAsync("GetChannelRateCodes", new object[] {
                        ChannelID}, this.GetChannelRateCodesOperationCompleted, userState);
        }
        
        private void OnGetChannelRateCodesOperationCompleted(object arg) {
            if ((this.GetChannelRateCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelRateCodesCompleted(this, new GetChannelRateCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMajorChannels", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DistroMapping[] GetMajorChannels() {
            object[] results = this.Invoke("GetMajorChannels", new object[0]);
            return ((DistroMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMajorChannelsAsync() {
            this.GetMajorChannelsAsync(null);
        }
        
        /// <remarks/>
        public void GetMajorChannelsAsync(object userState) {
            if ((this.GetMajorChannelsOperationCompleted == null)) {
                this.GetMajorChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMajorChannelsOperationCompleted);
            }
            this.InvokeAsync("GetMajorChannels", new object[0], this.GetMajorChannelsOperationCompleted, userState);
        }
        
        private void OnGetMajorChannelsOperationCompleted(object arg) {
            if ((this.GetMajorChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMajorChannelsCompleted(this, new GetMajorChannelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpaqueChannels", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DistroMapping[] GetOpaqueChannels() {
            object[] results = this.Invoke("GetOpaqueChannels", new object[0]);
            return ((DistroMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOpaqueChannelsAsync() {
            this.GetOpaqueChannelsAsync(null);
        }
        
        /// <remarks/>
        public void GetOpaqueChannelsAsync(object userState) {
            if ((this.GetOpaqueChannelsOperationCompleted == null)) {
                this.GetOpaqueChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpaqueChannelsOperationCompleted);
            }
            this.InvokeAsync("GetOpaqueChannels", new object[0], this.GetOpaqueChannelsOperationCompleted, userState);
        }
        
        private void OnGetOpaqueChannelsOperationCompleted(object arg) {
            if ((this.GetOpaqueChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpaqueChannelsCompleted(this, new GetOpaqueChannelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPackagingChannels", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DistroMapping[] GetPackagingChannels() {
            object[] results = this.Invoke("GetPackagingChannels", new object[0]);
            return ((DistroMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPackagingChannelsAsync() {
            this.GetPackagingChannelsAsync(null);
        }
        
        /// <remarks/>
        public void GetPackagingChannelsAsync(object userState) {
            if ((this.GetPackagingChannelsOperationCompleted == null)) {
                this.GetPackagingChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackagingChannelsOperationCompleted);
            }
            this.InvokeAsync("GetPackagingChannels", new object[0], this.GetPackagingChannelsOperationCompleted, userState);
        }
        
        private void OnGetPackagingChannelsOperationCompleted(object arg) {
            if ((this.GetPackagingChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackagingChannelsCompleted(this, new GetPackagingChannelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOpaqueParticipation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckOpaqueParticipation(string ChannelShortName, int CommunityID) {
            object[] results = this.Invoke("CheckOpaqueParticipation", new object[] {
                        ChannelShortName,
                        CommunityID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOpaqueParticipationAsync(string ChannelShortName, int CommunityID) {
            this.CheckOpaqueParticipationAsync(ChannelShortName, CommunityID, null);
        }
        
        /// <remarks/>
        public void CheckOpaqueParticipationAsync(string ChannelShortName, int CommunityID, object userState) {
            if ((this.CheckOpaqueParticipationOperationCompleted == null)) {
                this.CheckOpaqueParticipationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOpaqueParticipationOperationCompleted);
            }
            this.InvokeAsync("CheckOpaqueParticipation", new object[] {
                        ChannelShortName,
                        CommunityID}, this.CheckOpaqueParticipationOperationCompleted, userState);
        }
        
        private void OnCheckOpaqueParticipationOperationCompleted(object arg) {
            if ((this.CheckOpaqueParticipationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOpaqueParticipationCompleted(this, new CheckOpaqueParticipationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckPackagingParticipation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckPackagingParticipation(string ChannelShortName, int CommunityID) {
            object[] results = this.Invoke("CheckPackagingParticipation", new object[] {
                        ChannelShortName,
                        CommunityID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPackagingParticipationAsync(string ChannelShortName, int CommunityID) {
            this.CheckPackagingParticipationAsync(ChannelShortName, CommunityID, null);
        }
        
        /// <remarks/>
        public void CheckPackagingParticipationAsync(string ChannelShortName, int CommunityID, object userState) {
            if ((this.CheckPackagingParticipationOperationCompleted == null)) {
                this.CheckPackagingParticipationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPackagingParticipationOperationCompleted);
            }
            this.InvokeAsync("CheckPackagingParticipation", new object[] {
                        ChannelShortName,
                        CommunityID}, this.CheckPackagingParticipationOperationCompleted, userState);
        }
        
        private void OnCheckPackagingParticipationOperationCompleted(object arg) {
            if ((this.CheckPackagingParticipationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPackagingParticipationCompleted(this, new CheckPackagingParticipationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDistroStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckDistroStatus(int CommunityID, int channelid, string RateCodeName) {
            object[] results = this.Invoke("CheckDistroStatus", new object[] {
                        CommunityID,
                        channelid,
                        RateCodeName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDistroStatusAsync(int CommunityID, int channelid, string RateCodeName) {
            this.CheckDistroStatusAsync(CommunityID, channelid, RateCodeName, null);
        }
        
        /// <remarks/>
        public void CheckDistroStatusAsync(int CommunityID, int channelid, string RateCodeName, object userState) {
            if ((this.CheckDistroStatusOperationCompleted == null)) {
                this.CheckDistroStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDistroStatusOperationCompleted);
            }
            this.InvokeAsync("CheckDistroStatus", new object[] {
                        CommunityID,
                        channelid,
                        RateCodeName}, this.CheckDistroStatusOperationCompleted, userState);
        }
        
        private void OnCheckDistroStatusOperationCompleted(object arg) {
            if ((this.CheckDistroStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDistroStatusCompleted(this, new CheckDistroStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistroChannelInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetDistroChannelInfo(string RateCodeName) {
            object[] results = this.Invoke("GetDistroChannelInfo", new object[] {
                        RateCodeName});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDistroChannelInfoAsync(string RateCodeName) {
            this.GetDistroChannelInfoAsync(RateCodeName, null);
        }
        
        /// <remarks/>
        public void GetDistroChannelInfoAsync(string RateCodeName, object userState) {
            if ((this.GetDistroChannelInfoOperationCompleted == null)) {
                this.GetDistroChannelInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistroChannelInfoOperationCompleted);
            }
            this.InvokeAsync("GetDistroChannelInfo", new object[] {
                        RateCodeName}, this.GetDistroChannelInfoOperationCompleted, userState);
        }
        
        private void OnGetDistroChannelInfoOperationCompleted(object arg) {
            if ((this.GetDistroChannelInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistroChannelInfoCompleted(this, new GetDistroChannelInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropertyInventoryStatus[] GetInventoryStatus(int days, int CommunityID) {
            object[] results = this.Invoke("GetInventoryStatus", new object[] {
                        days,
                        CommunityID});
            return ((PropertyInventoryStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryStatusAsync(int days, int CommunityID) {
            this.GetInventoryStatusAsync(days, CommunityID, null);
        }
        
        /// <remarks/>
        public void GetInventoryStatusAsync(int days, int CommunityID, object userState) {
            if ((this.GetInventoryStatusOperationCompleted == null)) {
                this.GetInventoryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryStatusOperationCompleted);
            }
            this.InvokeAsync("GetInventoryStatus", new object[] {
                        days,
                        CommunityID}, this.GetInventoryStatusOperationCompleted, userState);
        }
        
        private void OnGetInventoryStatusOperationCompleted(object arg) {
            if ((this.GetInventoryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryStatusCompleted(this, new GetInventoryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistributionCommission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetDistributionCommission(string TravelAgentCode, string RateCode, int CommunityID, int ManagementCompanyID) {
            object[] results = this.Invoke("GetDistributionCommission", new object[] {
                        TravelAgentCode,
                        RateCode,
                        CommunityID,
                        ManagementCompanyID});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistributionCommissionAsync(string TravelAgentCode, string RateCode, int CommunityID, int ManagementCompanyID) {
            this.GetDistributionCommissionAsync(TravelAgentCode, RateCode, CommunityID, ManagementCompanyID, null);
        }
        
        /// <remarks/>
        public void GetDistributionCommissionAsync(string TravelAgentCode, string RateCode, int CommunityID, int ManagementCompanyID, object userState) {
            if ((this.GetDistributionCommissionOperationCompleted == null)) {
                this.GetDistributionCommissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistributionCommissionOperationCompleted);
            }
            this.InvokeAsync("GetDistributionCommission", new object[] {
                        TravelAgentCode,
                        RateCode,
                        CommunityID,
                        ManagementCompanyID}, this.GetDistributionCommissionOperationCompleted, userState);
        }
        
        private void OnGetDistributionCommissionOperationCompleted(object arg) {
            if ((this.GetDistributionCommissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistributionCommissionCompleted(this, new GetDistributionCommissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class ServiceCredentials : System.Web.Services.Protocols.SoapHeader {
        
        private string tokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UnitInventoryStatus {
        
        private int unitProfileIDField;
        
        private int missingInventoryField;
        
        private int noInventoryField;
        
        private int moreInventoryField;
        
        private int noRateField;
        
        private int blackoutField;
        
        private int closedToArrivalField;
        
        private int dBAField;
        
        private int mLoSField;
        
        private System.DateTime firstNonAvailableDateField;
        
        private System.DateTime lastAvailableDateField;
        
        private System.DateTime lastDateField;
        
        /// <remarks/>
        public int UnitProfileID {
            get {
                return this.unitProfileIDField;
            }
            set {
                this.unitProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public int MissingInventory {
            get {
                return this.missingInventoryField;
            }
            set {
                this.missingInventoryField = value;
            }
        }
        
        /// <remarks/>
        public int NoInventory {
            get {
                return this.noInventoryField;
            }
            set {
                this.noInventoryField = value;
            }
        }
        
        /// <remarks/>
        public int MoreInventory {
            get {
                return this.moreInventoryField;
            }
            set {
                this.moreInventoryField = value;
            }
        }
        
        /// <remarks/>
        public int NoRate {
            get {
                return this.noRateField;
            }
            set {
                this.noRateField = value;
            }
        }
        
        /// <remarks/>
        public int Blackout {
            get {
                return this.blackoutField;
            }
            set {
                this.blackoutField = value;
            }
        }
        
        /// <remarks/>
        public int ClosedToArrival {
            get {
                return this.closedToArrivalField;
            }
            set {
                this.closedToArrivalField = value;
            }
        }
        
        /// <remarks/>
        public int DBA {
            get {
                return this.dBAField;
            }
            set {
                this.dBAField = value;
            }
        }
        
        /// <remarks/>
        public int MLoS {
            get {
                return this.mLoSField;
            }
            set {
                this.mLoSField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FirstNonAvailableDate {
            get {
                return this.firstNonAvailableDateField;
            }
            set {
                this.firstNonAvailableDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastAvailableDate {
            get {
                return this.lastAvailableDateField;
            }
            set {
                this.lastAvailableDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastDate {
            get {
                return this.lastDateField;
            }
            set {
                this.lastDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PropertyInventoryStatus {
        
        private int communityIDField;
        
        private UnitInventoryStatus[] unitListField;
        
        /// <remarks/>
        public int CommunityID {
            get {
                return this.communityIDField;
            }
            set {
                this.communityIDField = value;
            }
        }
        
        /// <remarks/>
        public UnitInventoryStatus[] UnitList {
            get {
                return this.unitListField;
            }
            set {
                this.unitListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DistroMapping {
        
        private string aRCField;
        
        private string rateCodeField;
        
        private string externalNameField;
        
        private int channelTypeField;
        
        private int channelIDField;
        
        private string channelNameField;
        
        private string channelShortNameField;
        
        /// <remarks/>
        public string ARC {
            get {
                return this.aRCField;
            }
            set {
                this.aRCField = value;
            }
        }
        
        /// <remarks/>
        public string RateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalName {
            get {
                return this.externalNameField;
            }
            set {
                this.externalNameField = value;
            }
        }
        
        /// <remarks/>
        public int ChannelType {
            get {
                return this.channelTypeField;
            }
            set {
                this.channelTypeField = value;
            }
        }
        
        /// <remarks/>
        public int ChannelID {
            get {
                return this.channelIDField;
            }
            set {
                this.channelIDField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelShortName {
            get {
                return this.channelShortNameField;
            }
            set {
                this.channelShortNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BlackOutPeriod {
        
        private int discountIDField;
        
        private System.DateTime blackOutStartField;
        
        private System.DateTime blackOutEndField;
        
        /// <remarks/>
        public int DiscountID {
            get {
                return this.discountIDField;
            }
            set {
                this.discountIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BlackOutStart {
            get {
                return this.blackOutStartField;
            }
            set {
                this.blackOutStartField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BlackOutEnd {
            get {
                return this.blackOutEndField;
            }
            set {
                this.blackOutEndField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DiscountCache {
        
        private int agencyIDField;
        
        private decimal agentAmountField;
        
        private int agentIDField;
        
        private decimal amountField;
        
        private DISCOUNTAMOUNTTYPE amountTypeField;
        
        private string aRCField;
        
        private System.DateTime bookEndField;
        
        private System.DateTime bookStartField;
        
        private int channelIDField;
        
        private int communityIDField;
        
        private string couponCodeField;
        
        private decimal couponFlatAmountField;
        
        private COUPONTYPE couponTypeField;
        
        private int currentCountField;
        
        private int dependencyOnTypeIDField;
        
        private string descriptionField;
        
        private bool discloseToPropertyField;
        
        private int discountIDField;
        
        private int dynamicMLOSField;
        
        private System.DateTime effectiveDateField;
        
        private bool enforceFullStayApplicabilityField;
        
        private int fridayField;
        
        private BlackOutPeriod[] listBlackOutDatesField;
        
        private decimal lLAmountField;
        
        private int maxStayField;
        
        private decimal minPurchaseAmountField;
        
        private int minStayField;
        
        private int mondayField;
        
        private string nameField;
        
        private System.DateTime nightEndField;
        
        private System.DateTime nightStartField;
        
        private int originalCountField;
        
        private decimal percentageField;
        
        private bool promoTypeField;
        
        private decimal propAmountField;
        
        private int propMgmtCoIDField;
        
        private string rateCodeField;
        
        private string rateCodeIDField;
        
        private string rateLabelField;
        
        private decimal retailDiscountField;
        
        private int saturdayField;
        
        private int sundayField;
        
        private decimal supplierDiscountField;
        
        private int threshold1Field;
        
        private int threshold2Field;
        
        private int thursdayField;
        
        private decimal totalField;
        
        private int tuesdayField;
        
        private DISCOUNTTYPE typeIDField;
        
        private int unitParamField;
        
        private int unitProfileIDField;
        
        private int wednesdayField;
        
        private bool cacheDiscountsField;
        
        /// <remarks/>
        public int AgencyID {
            get {
                return this.agencyIDField;
            }
            set {
                this.agencyIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal AgentAmount {
            get {
                return this.agentAmountField;
            }
            set {
                this.agentAmountField = value;
            }
        }
        
        /// <remarks/>
        public int AgentID {
            get {
                return this.agentIDField;
            }
            set {
                this.agentIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public DISCOUNTAMOUNTTYPE AmountType {
            get {
                return this.amountTypeField;
            }
            set {
                this.amountTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ARC {
            get {
                return this.aRCField;
            }
            set {
                this.aRCField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BookEnd {
            get {
                return this.bookEndField;
            }
            set {
                this.bookEndField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BookStart {
            get {
                return this.bookStartField;
            }
            set {
                this.bookStartField = value;
            }
        }
        
        /// <remarks/>
        public int ChannelID {
            get {
                return this.channelIDField;
            }
            set {
                this.channelIDField = value;
            }
        }
        
        /// <remarks/>
        public int CommunityID {
            get {
                return this.communityIDField;
            }
            set {
                this.communityIDField = value;
            }
        }
        
        /// <remarks/>
        public string CouponCode {
            get {
                return this.couponCodeField;
            }
            set {
                this.couponCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal CouponFlatAmount {
            get {
                return this.couponFlatAmountField;
            }
            set {
                this.couponFlatAmountField = value;
            }
        }
        
        /// <remarks/>
        public COUPONTYPE CouponType {
            get {
                return this.couponTypeField;
            }
            set {
                this.couponTypeField = value;
            }
        }
        
        /// <remarks/>
        public int currentCount {
            get {
                return this.currentCountField;
            }
            set {
                this.currentCountField = value;
            }
        }
        
        /// <remarks/>
        public int DependencyOnTypeID {
            get {
                return this.dependencyOnTypeIDField;
            }
            set {
                this.dependencyOnTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool DiscloseToProperty {
            get {
                return this.discloseToPropertyField;
            }
            set {
                this.discloseToPropertyField = value;
            }
        }
        
        /// <remarks/>
        public int DiscountID {
            get {
                return this.discountIDField;
            }
            set {
                this.discountIDField = value;
            }
        }
        
        /// <remarks/>
        public int dynamicMLOS {
            get {
                return this.dynamicMLOSField;
            }
            set {
                this.dynamicMLOSField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        public bool EnforceFullStayApplicability {
            get {
                return this.enforceFullStayApplicabilityField;
            }
            set {
                this.enforceFullStayApplicabilityField = value;
            }
        }
        
        /// <remarks/>
        public int Friday {
            get {
                return this.fridayField;
            }
            set {
                this.fridayField = value;
            }
        }
        
        /// <remarks/>
        public BlackOutPeriod[] ListBlackOutDates {
            get {
                return this.listBlackOutDatesField;
            }
            set {
                this.listBlackOutDatesField = value;
            }
        }
        
        /// <remarks/>
        public decimal LLAmount {
            get {
                return this.lLAmountField;
            }
            set {
                this.lLAmountField = value;
            }
        }
        
        /// <remarks/>
        public int MaxStay {
            get {
                return this.maxStayField;
            }
            set {
                this.maxStayField = value;
            }
        }
        
        /// <remarks/>
        public decimal MinPurchaseAmount {
            get {
                return this.minPurchaseAmountField;
            }
            set {
                this.minPurchaseAmountField = value;
            }
        }
        
        /// <remarks/>
        public int MinStay {
            get {
                return this.minStayField;
            }
            set {
                this.minStayField = value;
            }
        }
        
        /// <remarks/>
        public int Monday {
            get {
                return this.mondayField;
            }
            set {
                this.mondayField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime NightEnd {
            get {
                return this.nightEndField;
            }
            set {
                this.nightEndField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime NightStart {
            get {
                return this.nightStartField;
            }
            set {
                this.nightStartField = value;
            }
        }
        
        /// <remarks/>
        public int originalCount {
            get {
                return this.originalCountField;
            }
            set {
                this.originalCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal Percentage {
            get {
                return this.percentageField;
            }
            set {
                this.percentageField = value;
            }
        }
        
        /// <remarks/>
        public bool PromoType {
            get {
                return this.promoTypeField;
            }
            set {
                this.promoTypeField = value;
            }
        }
        
        /// <remarks/>
        public decimal PropAmount {
            get {
                return this.propAmountField;
            }
            set {
                this.propAmountField = value;
            }
        }
        
        /// <remarks/>
        public int PropMgmtCoID {
            get {
                return this.propMgmtCoIDField;
            }
            set {
                this.propMgmtCoIDField = value;
            }
        }
        
        /// <remarks/>
        public string RateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RateCodeID {
            get {
                return this.rateCodeIDField;
            }
            set {
                this.rateCodeIDField = value;
            }
        }
        
        /// <remarks/>
        public string RateLabel {
            get {
                return this.rateLabelField;
            }
            set {
                this.rateLabelField = value;
            }
        }
        
        /// <remarks/>
        public decimal RetailDiscount {
            get {
                return this.retailDiscountField;
            }
            set {
                this.retailDiscountField = value;
            }
        }
        
        /// <remarks/>
        public int Saturday {
            get {
                return this.saturdayField;
            }
            set {
                this.saturdayField = value;
            }
        }
        
        /// <remarks/>
        public int Sunday {
            get {
                return this.sundayField;
            }
            set {
                this.sundayField = value;
            }
        }
        
        /// <remarks/>
        public decimal SupplierDiscount {
            get {
                return this.supplierDiscountField;
            }
            set {
                this.supplierDiscountField = value;
            }
        }
        
        /// <remarks/>
        public int Threshold1 {
            get {
                return this.threshold1Field;
            }
            set {
                this.threshold1Field = value;
            }
        }
        
        /// <remarks/>
        public int Threshold2 {
            get {
                return this.threshold2Field;
            }
            set {
                this.threshold2Field = value;
            }
        }
        
        /// <remarks/>
        public int Thursday {
            get {
                return this.thursdayField;
            }
            set {
                this.thursdayField = value;
            }
        }
        
        /// <remarks/>
        public decimal Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public int Tuesday {
            get {
                return this.tuesdayField;
            }
            set {
                this.tuesdayField = value;
            }
        }
        
        /// <remarks/>
        public DISCOUNTTYPE TypeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
        
        /// <remarks/>
        public int UnitParam {
            get {
                return this.unitParamField;
            }
            set {
                this.unitParamField = value;
            }
        }
        
        /// <remarks/>
        public int UnitProfileID {
            get {
                return this.unitProfileIDField;
            }
            set {
                this.unitProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public int Wednesday {
            get {
                return this.wednesdayField;
            }
            set {
                this.wednesdayField = value;
            }
        }
        
        /// <remarks/>
        public bool CacheDiscounts {
            get {
                return this.cacheDiscountsField;
            }
            set {
                this.cacheDiscountsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum DISCOUNTAMOUNTTYPE {
        
        /// <remarks/>
        Flat,
        
        /// <remarks/>
        Percentage,
        
        /// <remarks/>
        FreeNight,
        
        /// <remarks/>
        Incentive,
        
        /// <remarks/>
        RateOverride,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum COUPONTYPE {
        
        /// <remarks/>
        LowestRate,
        
        /// <remarks/>
        RACRate,
        
        /// <remarks/>
        FlatRate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum DISCOUNTTYPE {
        
        /// <remarks/>
        MiniVac,
        
        /// <remarks/>
        AutoPricing,
        
        /// <remarks/>
        MerchantNetRate,
        
        /// <remarks/>
        Coupons,
        
        /// <remarks/>
        LeisureLinkRate,
        
        /// <remarks/>
        DynamicMLOS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DailyDiscount {
        
        private System.DateTime dateAvailField;
        
        private decimal percentField;
        
        /// <remarks/>
        public System.DateTime DateAvail {
            get {
                return this.dateAvailField;
            }
            set {
                this.dateAvailField = value;
            }
        }
        
        /// <remarks/>
        public decimal Percent {
            get {
                return this.percentField;
            }
            set {
                this.percentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RRAChangedRequest {
        
        private string[] rateCodeListField;
        
        private int communityIdField;
        
        private int unitProfileIdField;
        
        private System.DateTime queryTimeField;
        
        private int channelIDField;
        
        private string arcNumberField;
        
        private int minStayField;
        
        private int discountRuleField;
        
        private int maxLengthofStayField;
        
        private int maxDOAField;
        
        private int fullSubmDOAField;
        
        private bool bestAvailableField;
        
        private System.DateTime updateEndField;
        
        private bool checkPromoChangeField;
        
        private bool fullUpdateField;
        
        private System.DateTime startDateField;
        
        /// <remarks/>
        public string[] RateCodeList {
            get {
                return this.rateCodeListField;
            }
            set {
                this.rateCodeListField = value;
            }
        }
        
        /// <remarks/>
        public int CommunityId {
            get {
                return this.communityIdField;
            }
            set {
                this.communityIdField = value;
            }
        }
        
        /// <remarks/>
        public int UnitProfileId {
            get {
                return this.unitProfileIdField;
            }
            set {
                this.unitProfileIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime QueryTime {
            get {
                return this.queryTimeField;
            }
            set {
                this.queryTimeField = value;
            }
        }
        
        /// <remarks/>
        public int ChannelID {
            get {
                return this.channelIDField;
            }
            set {
                this.channelIDField = value;
            }
        }
        
        /// <remarks/>
        public string ArcNumber {
            get {
                return this.arcNumberField;
            }
            set {
                this.arcNumberField = value;
            }
        }
        
        /// <remarks/>
        public int MinStay {
            get {
                return this.minStayField;
            }
            set {
                this.minStayField = value;
            }
        }
        
        /// <remarks/>
        public int DiscountRule {
            get {
                return this.discountRuleField;
            }
            set {
                this.discountRuleField = value;
            }
        }
        
        /// <remarks/>
        public int MaxLengthofStay {
            get {
                return this.maxLengthofStayField;
            }
            set {
                this.maxLengthofStayField = value;
            }
        }
        
        /// <remarks/>
        public int MaxDOA {
            get {
                return this.maxDOAField;
            }
            set {
                this.maxDOAField = value;
            }
        }
        
        /// <remarks/>
        public int FullSubmDOA {
            get {
                return this.fullSubmDOAField;
            }
            set {
                this.fullSubmDOAField = value;
            }
        }
        
        /// <remarks/>
        public bool BestAvailable {
            get {
                return this.bestAvailableField;
            }
            set {
                this.bestAvailableField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateEnd {
            get {
                return this.updateEndField;
            }
            set {
                this.updateEndField = value;
            }
        }
        
        /// <remarks/>
        public bool CheckPromoChange {
            get {
                return this.checkPromoChangeField;
            }
            set {
                this.checkPromoChangeField = value;
            }
        }
        
        /// <remarks/>
        public bool FullUpdate {
            get {
                return this.fullUpdateField;
            }
            set {
                this.fullUpdateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DistributionRoomType {
        
        private int unitProfileIDField;
        
        private string roomCodeField;
        
        private string rateCodeField;
        
        private DailyRate[] availabilitiesField;
        
        /// <remarks/>
        public int UnitProfileID {
            get {
                return this.unitProfileIDField;
            }
            set {
                this.unitProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public string RoomCode {
            get {
                return this.roomCodeField;
            }
            set {
                this.roomCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public DailyRate[] Availabilities {
            get {
                return this.availabilitiesField;
            }
            set {
                this.availabilitiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DailyRate {
        
        private int unitProfileIDField;
        
        private System.DateTime dateAvailField;
        
        private int communityIDField;
        
        private int numAvailField;
        
        private bool closedToArrivalField;
        
        private bool closedToDepartureField;
        
        private bool blackoutField;
        
        private int rateRackField;
        
        private decimal rateNetField;
        
        private int dBACutOffField;
        
        private int tODCutOffField;
        
        private Rate[] ratesField;
        
        private bool cutOffField;
        
        private Stay[] staysField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        public int UnitProfileID {
            get {
                return this.unitProfileIDField;
            }
            set {
                this.unitProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAvail {
            get {
                return this.dateAvailField;
            }
            set {
                this.dateAvailField = value;
            }
        }
        
        /// <remarks/>
        public int CommunityID {
            get {
                return this.communityIDField;
            }
            set {
                this.communityIDField = value;
            }
        }
        
        /// <remarks/>
        public int NumAvail {
            get {
                return this.numAvailField;
            }
            set {
                this.numAvailField = value;
            }
        }
        
        /// <remarks/>
        public bool ClosedToArrival {
            get {
                return this.closedToArrivalField;
            }
            set {
                this.closedToArrivalField = value;
            }
        }
        
        /// <remarks/>
        public bool ClosedToDeparture {
            get {
                return this.closedToDepartureField;
            }
            set {
                this.closedToDepartureField = value;
            }
        }
        
        /// <remarks/>
        public bool Blackout {
            get {
                return this.blackoutField;
            }
            set {
                this.blackoutField = value;
            }
        }
        
        /// <remarks/>
        public int RateRack {
            get {
                return this.rateRackField;
            }
            set {
                this.rateRackField = value;
            }
        }
        
        /// <remarks/>
        public decimal RateNet {
            get {
                return this.rateNetField;
            }
            set {
                this.rateNetField = value;
            }
        }
        
        /// <remarks/>
        public int DBACutOff {
            get {
                return this.dBACutOffField;
            }
            set {
                this.dBACutOffField = value;
            }
        }
        
        /// <remarks/>
        public int TODCutOff {
            get {
                return this.tODCutOffField;
            }
            set {
                this.tODCutOffField = value;
            }
        }
        
        /// <remarks/>
        public Rate[] Rates {
            get {
                return this.ratesField;
            }
            set {
                this.ratesField = value;
            }
        }
        
        /// <remarks/>
        public bool CutOff {
            get {
                return this.cutOffField;
            }
            set {
                this.cutOffField = value;
            }
        }
        
        /// <remarks/>
        public Stay[] Stays {
            get {
                return this.staysField;
            }
            set {
                this.staysField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Rate {
        
        private int minStayField;
        
        private int maxStayField;
        
        private decimal discountRateField;
        
        private string rateCodeField;
        
        private bool closedField;
        
        private string notesField;
        
        private decimal taxField;
        
        private int promoStatusField;
        
        /// <remarks/>
        public int MinStay {
            get {
                return this.minStayField;
            }
            set {
                this.minStayField = value;
            }
        }
        
        /// <remarks/>
        public int MaxStay {
            get {
                return this.maxStayField;
            }
            set {
                this.maxStayField = value;
            }
        }
        
        /// <remarks/>
        public decimal DiscountRate {
            get {
                return this.discountRateField;
            }
            set {
                this.discountRateField = value;
            }
        }
        
        /// <remarks/>
        public string RateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool Closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public decimal Tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
        
        /// <remarks/>
        public int PromoStatus {
            get {
                return this.promoStatusField;
            }
            set {
                this.promoStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Stay {
        
        private int nightsField;
        
        private int unitProfileIDField;
        
        private decimal baseRateField;
        
        private decimal taxField;
        
        private decimal feesField;
        
        private string rateCodeField;
        
        private bool closedField;
        
        private string notesField;
        
        private string feeDescField;
        
        private decimal merchandisedFeesField;
        
        private string merchandisedFeeDescField;
        
        /// <remarks/>
        public int Nights {
            get {
                return this.nightsField;
            }
            set {
                this.nightsField = value;
            }
        }
        
        /// <remarks/>
        public int UnitProfileID {
            get {
                return this.unitProfileIDField;
            }
            set {
                this.unitProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal BaseRate {
            get {
                return this.baseRateField;
            }
            set {
                this.baseRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal Tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
        
        /// <remarks/>
        public decimal Fees {
            get {
                return this.feesField;
            }
            set {
                this.feesField = value;
            }
        }
        
        /// <remarks/>
        public string RateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool Closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string FeeDesc {
            get {
                return this.feeDescField;
            }
            set {
                this.feeDescField = value;
            }
        }
        
        /// <remarks/>
        public decimal MerchandisedFees {
            get {
                return this.merchandisedFeesField;
            }
            set {
                this.merchandisedFeesField = value;
            }
        }
        
        /// <remarks/>
        public string MerchandisedFeeDesc {
            get {
                return this.merchandisedFeeDescField;
            }
            set {
                this.merchandisedFeeDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DistributionProperty {
        
        private string propertyCodeField;
        
        private int communityIDField;
        
        private bool sendRateField;
        
        private bool sendInventoryField;
        
        private bool retrieveBookingField;
        
        private string accountIDField;
        
        private string passwordField;
        
        private System.DateTime queryTimeField;
        
        private DistributionRoomType[] objRoomTypeListField;
        
        private System.DateTime updateSinceField;
        
        private System.DateTime updateEndField;
        
        private bool acceptsGuaranteeBookingsField;
        
        private int itemCountField;
        
        private System.DateTime previousRetrieveTimeField;
        
        private bool checkPromRateAgainstFloorField;
        
        /// <remarks/>
        public string PropertyCode {
            get {
                return this.propertyCodeField;
            }
            set {
                this.propertyCodeField = value;
            }
        }
        
        /// <remarks/>
        public int CommunityID {
            get {
                return this.communityIDField;
            }
            set {
                this.communityIDField = value;
            }
        }
        
        /// <remarks/>
        public bool SendRate {
            get {
                return this.sendRateField;
            }
            set {
                this.sendRateField = value;
            }
        }
        
        /// <remarks/>
        public bool SendInventory {
            get {
                return this.sendInventoryField;
            }
            set {
                this.sendInventoryField = value;
            }
        }
        
        /// <remarks/>
        public bool RetrieveBooking {
            get {
                return this.retrieveBookingField;
            }
            set {
                this.retrieveBookingField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime QueryTime {
            get {
                return this.queryTimeField;
            }
            set {
                this.queryTimeField = value;
            }
        }
        
        /// <remarks/>
        public DistributionRoomType[] objRoomTypeList {
            get {
                return this.objRoomTypeListField;
            }
            set {
                this.objRoomTypeListField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateSince {
            get {
                return this.updateSinceField;
            }
            set {
                this.updateSinceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateEnd {
            get {
                return this.updateEndField;
            }
            set {
                this.updateEndField = value;
            }
        }
        
        /// <remarks/>
        public bool AcceptsGuaranteeBookings {
            get {
                return this.acceptsGuaranteeBookingsField;
            }
            set {
                this.acceptsGuaranteeBookingsField = value;
            }
        }
        
        /// <remarks/>
        public int ItemCount {
            get {
                return this.itemCountField;
            }
            set {
                this.itemCountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PreviousRetrieveTime {
            get {
                return this.previousRetrieveTimeField;
            }
            set {
                this.previousRetrieveTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool CheckPromRateAgainstFloor {
            get {
                return this.checkPromRateAgainstFloorField;
            }
            set {
                this.checkPromRateAgainstFloorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SupplierRateAvailability {
        
        private int availabilityIDField;
        
        private int unitMapIDField;
        
        private System.DateTime dateAvailField;
        
        private System.Nullable<int> numAvailField;
        
        private System.Nullable<int> minStayField;
        
        private System.Nullable<int> maxStayField;
        
        private System.Nullable<bool> blackoutField;
        
        private System.Nullable<bool> closedToArrivalField;
        
        private System.Nullable<bool> closedToDepartureField;
        
        private System.Nullable<decimal> rateNetField;
        
        /// <remarks/>
        public int AvailabilityID {
            get {
                return this.availabilityIDField;
            }
            set {
                this.availabilityIDField = value;
            }
        }
        
        /// <remarks/>
        public int UnitMapID {
            get {
                return this.unitMapIDField;
            }
            set {
                this.unitMapIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAvail {
            get {
                return this.dateAvailField;
            }
            set {
                this.dateAvailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NumAvail {
            get {
                return this.numAvailField;
            }
            set {
                this.numAvailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MinStay {
            get {
                return this.minStayField;
            }
            set {
                this.minStayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MaxStay {
            get {
                return this.maxStayField;
            }
            set {
                this.maxStayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Blackout {
            get {
                return this.blackoutField;
            }
            set {
                this.blackoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ClosedToArrival {
            get {
                return this.closedToArrivalField;
            }
            set {
                this.closedToArrivalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ClosedToDeparture {
            get {
                return this.closedToDepartureField;
            }
            set {
                this.closedToDepartureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> RateNet {
            get {
                return this.rateNetField;
            }
            set {
                this.rateNetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SupplierUnitAvail {
        
        private int unitMapIDField;
        
        private SupplierRateAvailability[] availabilitiesField;
        
        /// <remarks/>
        public int UnitMapID {
            get {
                return this.unitMapIDField;
            }
            set {
                this.unitMapIDField = value;
            }
        }
        
        /// <remarks/>
        public SupplierRateAvailability[] Availabilities {
            get {
                return this.availabilitiesField;
            }
            set {
                this.availabilitiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UnitPricing {
        
        private int unitProfileIDField;
        
        private bool suppressAutoRateField;
        
        private DailyRate[] availabilitiesField;
        
        private decimal priceNetField;
        
        private decimal priceRackField;
        
        /// <remarks/>
        public int UnitProfileID {
            get {
                return this.unitProfileIDField;
            }
            set {
                this.unitProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public bool SuppressAutoRate {
            get {
                return this.suppressAutoRateField;
            }
            set {
                this.suppressAutoRateField = value;
            }
        }
        
        /// <remarks/>
        public DailyRate[] Availabilities {
            get {
                return this.availabilitiesField;
            }
            set {
                this.availabilitiesField = value;
            }
        }
        
        /// <remarks/>
        public decimal PriceNet {
            get {
                return this.priceNetField;
            }
            set {
                this.priceNetField = value;
            }
        }
        
        /// <remarks/>
        public decimal PriceRack {
            get {
                return this.priceRackField;
            }
            set {
                this.priceRackField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PropertyPricing {
        
        private int communityIDField;
        
        private UnitPricing[] unitsField;
        
        private System.DateTime lastUpdatedField;
        
        /// <remarks/>
        public int CommunityID {
            get {
                return this.communityIDField;
            }
            set {
                this.communityIDField = value;
            }
        }
        
        /// <remarks/>
        public UnitPricing[] Units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Inventory {
        
        private int availabilityIDField;
        
        private int unitProfileIDField;
        
        private System.DateTime dateAvailField;
        
        private int communityIDField;
        
        private int propMgmtCoIDField;
        
        private int totalInventoryField;
        
        private int numAvailField;
        
        private int minStayField;
        
        private int maxStayField;
        
        private int rateRackField;
        
        private int dBACutOffField;
        
        private int tODCutOffField;
        
        private bool closedToArrivalField;
        
        private bool closedToDepartureField;
        
        private bool enabledPublicField;
        
        private bool blackoutField;
        
        private bool enabledMerchField;
        
        private bool useMarginPctField;
        
        private bool useMarkupPctField;
        
        private decimal markupAmountField;
        
        private decimal marginPctField;
        
        private System.Nullable<decimal> rateNetField;
        
        private int rateTypeIDField;
        
        private System.DateTime updatedField;
        
        private System.Nullable<decimal> floorPriceField;
        
        private System.Nullable<int> overRideTypeField;
        
        private InventoryControl[] distroICField;
        
        /// <remarks/>
        public int AvailabilityID {
            get {
                return this.availabilityIDField;
            }
            set {
                this.availabilityIDField = value;
            }
        }
        
        /// <remarks/>
        public int UnitProfileID {
            get {
                return this.unitProfileIDField;
            }
            set {
                this.unitProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAvail {
            get {
                return this.dateAvailField;
            }
            set {
                this.dateAvailField = value;
            }
        }
        
        /// <remarks/>
        public int CommunityID {
            get {
                return this.communityIDField;
            }
            set {
                this.communityIDField = value;
            }
        }
        
        /// <remarks/>
        public int PropMgmtCoID {
            get {
                return this.propMgmtCoIDField;
            }
            set {
                this.propMgmtCoIDField = value;
            }
        }
        
        /// <remarks/>
        public int TotalInventory {
            get {
                return this.totalInventoryField;
            }
            set {
                this.totalInventoryField = value;
            }
        }
        
        /// <remarks/>
        public int NumAvail {
            get {
                return this.numAvailField;
            }
            set {
                this.numAvailField = value;
            }
        }
        
        /// <remarks/>
        public int MinStay {
            get {
                return this.minStayField;
            }
            set {
                this.minStayField = value;
            }
        }
        
        /// <remarks/>
        public int MaxStay {
            get {
                return this.maxStayField;
            }
            set {
                this.maxStayField = value;
            }
        }
        
        /// <remarks/>
        public int RateRack {
            get {
                return this.rateRackField;
            }
            set {
                this.rateRackField = value;
            }
        }
        
        /// <remarks/>
        public int DBACutOff {
            get {
                return this.dBACutOffField;
            }
            set {
                this.dBACutOffField = value;
            }
        }
        
        /// <remarks/>
        public int TODCutOff {
            get {
                return this.tODCutOffField;
            }
            set {
                this.tODCutOffField = value;
            }
        }
        
        /// <remarks/>
        public bool ClosedToArrival {
            get {
                return this.closedToArrivalField;
            }
            set {
                this.closedToArrivalField = value;
            }
        }
        
        /// <remarks/>
        public bool ClosedToDeparture {
            get {
                return this.closedToDepartureField;
            }
            set {
                this.closedToDepartureField = value;
            }
        }
        
        /// <remarks/>
        public bool EnabledPublic {
            get {
                return this.enabledPublicField;
            }
            set {
                this.enabledPublicField = value;
            }
        }
        
        /// <remarks/>
        public bool Blackout {
            get {
                return this.blackoutField;
            }
            set {
                this.blackoutField = value;
            }
        }
        
        /// <remarks/>
        public bool EnabledMerch {
            get {
                return this.enabledMerchField;
            }
            set {
                this.enabledMerchField = value;
            }
        }
        
        /// <remarks/>
        public bool UseMarginPct {
            get {
                return this.useMarginPctField;
            }
            set {
                this.useMarginPctField = value;
            }
        }
        
        /// <remarks/>
        public bool UseMarkupPct {
            get {
                return this.useMarkupPctField;
            }
            set {
                this.useMarkupPctField = value;
            }
        }
        
        /// <remarks/>
        public decimal MarkupAmount {
            get {
                return this.markupAmountField;
            }
            set {
                this.markupAmountField = value;
            }
        }
        
        /// <remarks/>
        public decimal MarginPct {
            get {
                return this.marginPctField;
            }
            set {
                this.marginPctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> RateNet {
            get {
                return this.rateNetField;
            }
            set {
                this.rateNetField = value;
            }
        }
        
        /// <remarks/>
        public int RateTypeID {
            get {
                return this.rateTypeIDField;
            }
            set {
                this.rateTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> FloorPrice {
            get {
                return this.floorPriceField;
            }
            set {
                this.floorPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OverRideType {
            get {
                return this.overRideTypeField;
            }
            set {
                this.overRideTypeField = value;
            }
        }
        
        /// <remarks/>
        public InventoryControl[] DistroIC {
            get {
                return this.distroICField;
            }
            set {
                this.distroICField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InventoryControl {
        
        private int distroIDField;
        
        private System.Nullable<int> limitField;
        
        private System.Nullable<int> reserveField;
        
        private System.Nullable<bool> blackoutField;
        
        private int bookedField;
        
        /// <remarks/>
        public int DistroID {
            get {
                return this.distroIDField;
            }
            set {
                this.distroIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Reserve {
            get {
                return this.reserveField;
            }
            set {
                this.reserveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Blackout {
            get {
                return this.blackoutField;
            }
            set {
                this.blackoutField = value;
            }
        }
        
        /// <remarks/>
        public int Booked {
            get {
                return this.bookedField;
            }
            set {
                this.bookedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UnitInventory {
        
        private int unitProfileIDField;
        
        private bool suppressAutoRateField;
        
        private Inventory[] listField;
        
        /// <remarks/>
        public int UnitProfileID {
            get {
                return this.unitProfileIDField;
            }
            set {
                this.unitProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public bool SuppressAutoRate {
            get {
                return this.suppressAutoRateField;
            }
            set {
                this.suppressAutoRateField = value;
            }
        }
        
        /// <remarks/>
        public Inventory[] List {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Availability {
        
        private int availabilityIDField;
        
        private int unitProfileIDField;
        
        private System.DateTime dateAvailField;
        
        private int communityIDField;
        
        private int propMgmtCoIDField;
        
        private System.Nullable<int> numAvailField;
        
        private System.Nullable<int> minStayField;
        
        private System.Nullable<int> maxStayField;
        
        private System.Nullable<int> rateRackField;
        
        private System.Nullable<int> dBACutOffField;
        
        private System.Nullable<int> tODCutOffField;
        
        private System.Nullable<bool> closedToArrivalField;
        
        private System.Nullable<bool> closedToDepartureField;
        
        private System.Nullable<bool> enabledPublicField;
        
        private System.Nullable<bool> blackoutField;
        
        private System.Nullable<bool> enabledMerchField;
        
        private System.Nullable<bool> useMarginPctField;
        
        private System.Nullable<bool> useMarkupPctField;
        
        private System.Nullable<decimal> markupAmountField;
        
        private System.Nullable<decimal> marginPctField;
        
        private System.Nullable<decimal> rateNetField;
        
        private int rateTypeIDField;
        
        private System.DateTime updatedField;
        
        private System.DateTime createdField;
        
        private System.Nullable<decimal> floorPriceField;
        
        private System.Nullable<int> overRideTypeField;
        
        private string updatedByField;
        
        private InventoryControl[] distroICField;
        
        /// <remarks/>
        public int AvailabilityID {
            get {
                return this.availabilityIDField;
            }
            set {
                this.availabilityIDField = value;
            }
        }
        
        /// <remarks/>
        public int UnitProfileID {
            get {
                return this.unitProfileIDField;
            }
            set {
                this.unitProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAvail {
            get {
                return this.dateAvailField;
            }
            set {
                this.dateAvailField = value;
            }
        }
        
        /// <remarks/>
        public int CommunityID {
            get {
                return this.communityIDField;
            }
            set {
                this.communityIDField = value;
            }
        }
        
        /// <remarks/>
        public int PropMgmtCoID {
            get {
                return this.propMgmtCoIDField;
            }
            set {
                this.propMgmtCoIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NumAvail {
            get {
                return this.numAvailField;
            }
            set {
                this.numAvailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MinStay {
            get {
                return this.minStayField;
            }
            set {
                this.minStayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MaxStay {
            get {
                return this.maxStayField;
            }
            set {
                this.maxStayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RateRack {
            get {
                return this.rateRackField;
            }
            set {
                this.rateRackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DBACutOff {
            get {
                return this.dBACutOffField;
            }
            set {
                this.dBACutOffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TODCutOff {
            get {
                return this.tODCutOffField;
            }
            set {
                this.tODCutOffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ClosedToArrival {
            get {
                return this.closedToArrivalField;
            }
            set {
                this.closedToArrivalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ClosedToDeparture {
            get {
                return this.closedToDepartureField;
            }
            set {
                this.closedToDepartureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> EnabledPublic {
            get {
                return this.enabledPublicField;
            }
            set {
                this.enabledPublicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Blackout {
            get {
                return this.blackoutField;
            }
            set {
                this.blackoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> EnabledMerch {
            get {
                return this.enabledMerchField;
            }
            set {
                this.enabledMerchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> UseMarginPct {
            get {
                return this.useMarginPctField;
            }
            set {
                this.useMarginPctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> UseMarkupPct {
            get {
                return this.useMarkupPctField;
            }
            set {
                this.useMarkupPctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MarkupAmount {
            get {
                return this.markupAmountField;
            }
            set {
                this.markupAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MarginPct {
            get {
                return this.marginPctField;
            }
            set {
                this.marginPctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> RateNet {
            get {
                return this.rateNetField;
            }
            set {
                this.rateNetField = value;
            }
        }
        
        /// <remarks/>
        public int RateTypeID {
            get {
                return this.rateTypeIDField;
            }
            set {
                this.rateTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> FloorPrice {
            get {
                return this.floorPriceField;
            }
            set {
                this.floorPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OverRideType {
            get {
                return this.overRideTypeField;
            }
            set {
                this.overRideTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedBy {
            get {
                return this.updatedByField;
            }
            set {
                this.updatedByField = value;
            }
        }
        
        /// <remarks/>
        public InventoryControl[] DistroIC {
            get {
                return this.distroICField;
            }
            set {
                this.distroICField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UnitAvail {
        
        private int unitProfileIDField;
        
        private bool suppressAutoRateField;
        
        private Availability[] availabilitiesField;
        
        /// <remarks/>
        public int UnitProfileID {
            get {
                return this.unitProfileIDField;
            }
            set {
                this.unitProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public bool SuppressAutoRate {
            get {
                return this.suppressAutoRateField;
            }
            set {
                this.suppressAutoRateField = value;
            }
        }
        
        /// <remarks/>
        public Availability[] Availabilities {
            get {
                return this.availabilitiesField;
            }
            set {
                this.availabilitiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PropertyAvail {
        
        private int communityIDField;
        
        private UnitAvail[] unitsField;
        
        private System.DateTime lastUpdatedField;
        
        /// <remarks/>
        public int CommunityID {
            get {
                return this.communityIDField;
            }
            set {
                this.communityIDField = value;
            }
        }
        
        /// <remarks/>
        public UnitAvail[] Units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void WebServiceLoginCompletedEventHandler(object sender, WebServiceLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebServiceLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebServiceLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPropertyAvailabilityCompletedEventHandler(object sender, GetPropertyAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertyAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertyAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertyAvail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyAvail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUnitInventoryCompletedEventHandler(object sender, GetUnitInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitInventory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitInventory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUnitAvailabilityCompletedEventHandler(object sender, GetUnitAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitAvail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitAvail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPropertyBestPricingCompletedEventHandler(object sender, GetPropertyBestPricingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertyBestPricingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertyBestPricingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertyPricing Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyPricing)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUnitBestPricingCompletedEventHandler(object sender, GetUnitBestPricingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitBestPricingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitBestPricingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitPricing Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitPricing)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUnitAvailabilityCacheCompletedEventHandler(object sender, GetUnitAvailabilityCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitAvailabilityCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitAvailabilityCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitAvail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitAvail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateAvailabilityCompletedEventHandler(object sender, UpdateAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void BlackoutUnitCompletedEventHandler(object sender, BlackoutUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlackoutUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BlackoutUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GeSuppliertUnitAvailabilityCompletedEventHandler(object sender, GeSuppliertUnitAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeSuppliertUnitAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeSuppliertUnitAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SupplierUnitAvail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SupplierUnitAvail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSuppliertUnitAvailabilityCompletedEventHandler(object sender, GetSuppliertUnitAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSuppliertUnitAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSuppliertUnitAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SupplierUnitAvail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SupplierUnitAvail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateSupplierUnitAvailabilityCompletedEventHandler(object sender, UpdateSupplierUnitAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSupplierUnitAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSupplierUnitAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CleanSupplierAvailabilityCompletedEventHandler(object sender, CleanSupplierAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanSupplierAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanSupplierAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UploadCompletedEventHandler(object sender, UploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ARMUploadCompletedEventHandler(object sender, ARMUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ARMUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ARMUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDistributionRateAvailabilityChangesCompletedEventHandler(object sender, GetDistributionRateAvailabilityChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistributionRateAvailabilityChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistributionRateAvailabilityChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DistributionProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DistributionProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetICSTaskRateAvailCompletedEventHandler(object sender, GetICSTaskRateAvailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetICSTaskRateAvailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetICSTaskRateAvailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DistributionProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DistributionProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ConfirmSubmitRateAvailabilityCompletedEventHandler(object sender, ConfirmSubmitRateAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmSubmitRateAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmSubmitRateAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDistributionModifiedUnitsCompletedEventHandler(object sender, GetDistributionModifiedUnitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistributionModifiedUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistributionModifiedUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DistributionProperty Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DistributionProperty)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDistributionTaskCompletedEventHandler(object sender, GetDistributionTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistributionTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistributionTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DistributionProperty Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DistributionProperty)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUnitDailyBestDiscountsCompletedEventHandler(object sender, GetUnitDailyBestDiscountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitDailyBestDiscountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitDailyBestDiscountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DailyDiscount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DailyDiscount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUnitAvailablePromotionsCompletedEventHandler(object sender, GetUnitAvailablePromotionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitAvailablePromotionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitAvailablePromotionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscountCache[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscountCache[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPropertyAvailablePromotionsCompletedEventHandler(object sender, GetPropertyAvailablePromotionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertyAvailablePromotionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertyAvailablePromotionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DiscountCache[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DiscountCache[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RefreshDiscountCacheCompletedEventHandler(object sender, RefreshDiscountCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefreshDiscountCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefreshDiscountCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RefreshRateAvailCacheCompletedEventHandler(object sender, RefreshRateAvailCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefreshRateAvailCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefreshRateAvailCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RefreshCacheCompletedEventHandler(object sender, RefreshCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefreshCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefreshCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateCacheAvailabilityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetChannelRateCodesCompletedEventHandler(object sender, GetChannelRateCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelRateCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelRateCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetMajorChannelsCompletedEventHandler(object sender, GetMajorChannelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMajorChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMajorChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DistroMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DistroMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetOpaqueChannelsCompletedEventHandler(object sender, GetOpaqueChannelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpaqueChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpaqueChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DistroMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DistroMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPackagingChannelsCompletedEventHandler(object sender, GetPackagingChannelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackagingChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackagingChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DistroMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DistroMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CheckOpaqueParticipationCompletedEventHandler(object sender, CheckOpaqueParticipationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOpaqueParticipationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOpaqueParticipationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CheckPackagingParticipationCompletedEventHandler(object sender, CheckPackagingParticipationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPackagingParticipationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPackagingParticipationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CheckDistroStatusCompletedEventHandler(object sender, CheckDistroStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDistroStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDistroStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDistroChannelInfoCompletedEventHandler(object sender, GetDistroChannelInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistroChannelInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistroChannelInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetInventoryStatusCompletedEventHandler(object sender, GetInventoryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertyInventoryStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertyInventoryStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDistributionCommissionCompletedEventHandler(object sender, GetDistributionCommissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistributionCommissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistributionCommissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591